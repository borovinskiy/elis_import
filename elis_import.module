<?php 

/** 
 * ELiS import module for importing from remote resources
 * 
 * @author Arsen I. Borovinskiy 
 * All rights reserved.
 */

/**
 * hook_menu implementation
 */
function elis_import_menu() {
  $items['node/%node/import/culturaru'] = array(
    'title' => "Импорт с сайта Cultura.RU",
    'page callback' => 'import_cultura_epub',
    'page arguments' => array(1),    
    'access arguments' => array('import any documents'),
    'weight' => 5,
    'type' => MENU_CALLBACK,  //  MENU_LOCAL_TASK,        
    'file'=> 'sources/culturaru.inc',
  );
  $items['node/%node/import/zip'] = array(
    'title' => "Импорт ZIP-архива",
    'page callback' => 'import_zip_elis_import',
    'page arguments' => array(1),    
    'access arguments' => array('import any documents'),
    'weight' => 5,
    'type' => MENU_CALLBACK,  //  MENU_LOCAL_TASK,        
    'file'=> 'sources/zip.inc',
  );
  // 'node/%node/import' see in subj_library import_list_subj_library()
  return $items;  
}

function require_zip_elis_import() {
  require_once(drupal_get_path("module","elis_import") . "/sources/zip.inc");
}

/* find first node by same object fields
 * $importVO fields: {title, authorsName=[], description, coverUrl, fileUrl, licenseUrl, importSource}
 * 
 */
function find_node_if_exists_elis_import($importVO) {
  $is_node_exists = false;
  $node = false;
  if (isset($importVO->importSource) && is_string($importVO->importSource) && strlen($importVO->importSource)) {
    $query = new EntityFieldQuery();
    $query->entityCondition('entity_type', 'node')->fieldCondition('field_import_source', 'value', $importVO->importSource, '=');
    if (isset($importVO->type)) {
      $query->entityCondition('bundle', $importVO->type);
    }
    $query->addMetaData('account', user_load(1));
    $result = $query->execute();
    if (isset($result['node'])) {
      $is_node_exists = true;
      $finded_nids = array_keys($result['node']);
      $node = node_load($finded_nids[0]);
    }
  }
  
  if ($is_node_exists === false) {
    $result = db_select("node","n")->fields("n")->condition("title",$importVO->title)->execute();

    while ($res = $result->fetchObject()) {
      $node = node_load($res->nid);
      if (isset($importVO->importSource) && $is_node_exists === false && $importVO->importSource != false) {
        if (ElisHelper::getFirstFieldValue('node', $node, 'field_import_source') === $importVO->importSource) {
          $is_node_exists = true;
        }
      }
      if ($node->title == $importVO->title && $is_node_exists === false) {
        // check authors name in database exists
        if (isset($node->field_authors) && isset($node->field_authors[LANGUAGE_NONE]) && isset($importVO->authorsName)) {
          foreach ($node->field_authors[LANGUAGE_NONE] as $author) {          
            $term = taxonomy_term_load($author['tid']);
            if (isset($term->name)) {
              if (is_string($importVO->authorsName) && $term->name == $importVO->authorsName) {
                $is_node_exists = true;
              } else if (is_array($importVO->authorsName) && in_array($term->name,$importVO->authorsName)) {
                $is_node_exists = true;
              }
            }
          }
        }
      }
    } 
  }
  
  return ($is_node_exists && $node != false) ? $node : false;
}
